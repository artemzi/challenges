package main

import (
	"fmt"
)

/**
Параллельная обработка
По данным n процессорам и m задач определите, для каждой из задач,
каким процессором она будет обработана.
	Вход. Число процессоров n и последовательность чисел
		t 0 , . . . , t m−1 , где t i — время, необходимое на обработку i-й
		задачи.

	Выход. Для каждой задачи определите, какой процессор
		и в какое время начнёт её обрабатывать, предполагая, что
		каждая задача поступает на обработку первому освободив-
		шемуся процессору.

		===========

Формат входа. Первая строка входа содержит числа n и m. Вторая
	содержит числа t 0 , . . . , t m−1 , где t i — время, необходимое на об-
	работку i-й задачи. Считаем, что и процессоры, и задачи нуме-
	руются с нуля.

Формат выхода. Выход должен содержать ровно m строк: i-я (счи-
	тая с нуля) строка должна содержать номер процесса, который
	получит i-ю задачу на обработку, и время, когда это произойдёт.

Ограничения. 1 ≤ n ≤ 10 5 ; 1 ≤ m ≤ 10 5 ; 0 ≤ t i ≤ 10 9 .
*/

func main() {
	var (
		n, m int
	)
	fmt.Scan(&n)
	fmt.Scan(&m)
	data := make([]int, m)
	for i := 0; i < m; i++ {
		fmt.Scan(&data[i])
	}

	fmt.Printf("%d %d %v\n", n, m, data)
}
