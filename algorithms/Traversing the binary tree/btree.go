package main

/**
Обход двоичного дерева
	Построить in-order, pre-order и post-order обходы данного двоичного дерева.
		Вход. Двоичное дерево.

		Выход. Все его вершины в трёх разных порядках: in-order,
			pre-order и post-order.

		Формат входа. Первая строка содержит число вершин n. Вершины
			дерева пронумерованы числами от 0 до n−1. Вершина 0 является
			корнем. Каждая из следующих n строк содержит информацию о
			вершинах 0, 1, . . . , n − 1: i-я строка задаёт числа key i , left i и right i ,
			где key i — ключ вершины i, left i — индекс левого сына верши-
			ны i, а right i — индекс правого сына вершины i. Если у верши-
			ны i нет одного или обоих сыновей, соответствующее значение
			равно −1.

		Формат выхода. Три строки: in-order, pre-order и post-order обходы.

		Ограничения. 1 ≤ n ≤ 10 5 ; 0 ≤ key i ≤ 10 9 ; −1 ≤ left i , right i ≤ n − 1.
			Гарантируется, что вход задаёт корректное двоичное дерево: в
			частности, если left i 6 = −1 и right i 6 = −1, то left i 6 = right i ; ника-
			кая вершина не является сыном двух вершин; каждая вершина
			является потомком корня.
*/

func main() {

}
